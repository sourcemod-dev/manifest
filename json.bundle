{"meta":{"name":"JSON","description":"A pure SourcePawn JSON encoder/decoder","author":"Clugg"},"source":{"type":"git","merge":true,"repository":"https://github.com/clugg/sm-json.git","endpoints":null,"patterns":["addons/sourcemod/scripting/include/json.inc","addons/sourcemod/scripting/include/json/*.inc","addons/sourcemod/scripting/include/json/helpers/*.inc"]},"strands":{"array":{"functions":{},"methodmaps":{"JSON_Array":{"name":"JSON_Array","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"36b928581e9f5846c0361d499cd2e51799ed1b70","count":87,"time":1571074934},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"parent":"JSON_Object","methods":{"Remove":{"name":"Remove","refLine":622,"docStart":16451,"docEnd":16695,"docs":{"brief":"Removes an index and its related meta-keys from the array,\nand shifts down all following element indices.","tags":[{"tag":"","text":"Removes an index and its related meta-keys from the array,\nand shifts down all following element indices."},{"tag":"param:key","text":"Key to remove."},{"tag":"return","text":"True on success, false if the value was never set."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},"EnforceType":{"name":"EnforceType","refLine":776,"docStart":21033,"docEnd":21328,"docs":{"brief":"Sets the array to enforce a specific type.\nThis will fail if there are any existing elements\nin the array which are not of the same type.","tags":[{"tag":"","text":"Sets the array to enforce a specific type.\nThis will fail if there are any existing elements\nin the array which are not of the same type."},{"tag":"param:type","text":"Type to enforce."},{"tag":"return","text":"True if the type was enforced successfully, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},"HasKey":{"name":"HasKey","refLine":100,"docStart":2928,"docEnd":3113,"docs":{"brief":"Checks whether the object has an index.","tags":[{"tag":"","text":"Checks whether the object has an index."},{"tag":"param:index","text":"Index to check existence of."},{"tag":"return","text":"True if the index exists, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},"ImportValues":{"name":"ImportValues","refLine":804,"docStart":21727,"docEnd":21988,"docs":{"brief":"Imports a native array's values into the instance.","tags":[{"tag":"","text":"Imports a native array's values into the instance."},{"tag":"param:type","text":"Type of native values."},{"tag":"param:values","text":"Array of values."},{"tag":"param:size","text":"Size of array."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null},{"type":"any[]","name":"values","decl":"any[] values","default":null},{"type":"int","name":"size","decl":"int size","default":null}]},"PushBool":{"name":"PushBool","refLine":515,"docStart":13860,"docEnd":14033,"docs":{"brief":"Pushes a bool to the end of the array.","tags":[{"tag":"","text":"Pushes a bool to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"The element's index on success, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"bool","name":"value","decl":"bool value","default":null}]},"PushInt":{"name":"PushInt","refLine":483,"docStart":13139,"docEnd":13312,"docs":{"brief":"Pushes an int to the end of the array.","tags":[{"tag":"","text":"Pushes an int to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"The element's index on success, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"value","decl":"int value","default":null}]},"ImportStrings":{"name":"ImportStrings","refLine":834,"docStart":22748,"docEnd":22964,"docs":{"brief":"Imports a native array's strings into the instance.","tags":[{"tag":"","text":"Imports a native array's strings into the instance."},{"tag":"param:strings","text":"Array of strings."},{"tag":"param:size","text":"Size of array."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[][]","name":"strings","decl":"const char[][] strings","default":null},{"type":"int","name":"size","decl":"int size","default":null}]},"SetMeta":{"name":"SetMeta","refLine":188,"docStart":5452,"docEnd":5581,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetMeta"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null},{"type":"any","name":"value","decl":"any value","default":null}]},"PushFloat":{"name":"PushFloat","refLine":499,"docStart":13496,"docEnd":13670,"docs":{"brief":"Pushes a float to the end of the array.","tags":[{"tag":"","text":"Pushes a float to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"The element's index on success, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"float","name":"value","decl":"float value","default":null}]},"GetOptionalValue":{"name":"GetOptionalValue","refLine":273,"docStart":7785,"docEnd":7925,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetOptionalValue"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"any&","name":"value","decl":"any& value","default":null}]},"SetType":{"name":"SetType","refLine":220,"docStart":6255,"docEnd":6475,"docs":{"brief":"Sets the cell type stored at a index.","tags":[{"tag":"","text":"Sets the cell type stored at a index."},{"tag":"param:index","text":"Index to set value type for."},{"tag":"param:type","text":"Type to set index to."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},"GetBool":{"name":"GetBool","refLine":333,"docStart":9461,"docEnd":9592,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetBool"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"default_value","decl":"bool default_value","default":"false"}]},"SetString":{"name":"SetString","refLine":367,"docStart":10353,"docEnd":10484,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetString"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},"SetInt":{"name":"SetInt","refLine":386,"docStart":10837,"docEnd":10965,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetInt"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},"GetObject":{"name":"GetObject","refLine":348,"docStart":9877,"docEnd":10010,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetObject"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSON_Object","name":"default_value","decl":"JSON_Object default_value","default":"null"}]},"SetFloat":{"name":"SetFloat","refLine":405,"docStart":11300,"docEnd":11430,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetFloat"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},"ShallowCopy":{"name":"ShallowCopy","refLine":889,"docStart":24220,"docEnd":24251,"docs":{"brief":"","tags":[{"tag":"see","text":"JSON_Object.ShallowCopy"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"JSON_Array","arguments":[]},"IndexOf":{"name":"IndexOf","refLine":551,"docStart":14646,"docEnd":14834,"docs":{"brief":"Finds the index of a value in the array.","tags":[{"tag":"","text":"Finds the index of a value in the array."},{"tag":"param:value","text":"Value to search for."},{"tag":"return","text":"The index of the value if it is found, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"any","name":"value","decl":"any value","default":null}]},"PushObject":{"name":"PushObject","refLine":531,"docStart":14220,"docEnd":14400,"docs":{"brief":"Pushes a JSON object to the end of the array.","tags":[{"tag":"","text":"Pushes a JSON object to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"The element's index on success, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"JSON_Object","name":"value","decl":"JSON_Object value","default":null}]},"GetSize":{"name":"GetSize","refLine":163,"docStart":4688,"docEnd":4947,"docs":{"brief":"Gets the length of the string stored at an index.","tags":[{"tag":"","text":"Gets the length of the string stored at an index."},{"tag":"param:index","text":"Index to get string length for."},{"tag":"return","text":"Length of string at index provided,\nor -1 if it is not a string/does not exist."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},"GetFloat":{"name":"GetFloat","refLine":318,"docStart":9041,"docEnd":9173,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetFloat"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"float","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"float","name":"default_value","decl":"float default_value","default":"-1.000000"}]},"DeepCopy":{"name":"DeepCopy","refLine":895,"docStart":24367,"docEnd":24395,"docs":{"brief":"","tags":[{"tag":"see","text":"JSON_Object.DeepCopy"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"JSON_Array","arguments":[]},"SetHidden":{"name":"SetHidden","refLine":244,"docStart":6967,"docEnd":7227,"docs":{"brief":"Sets whether the index should be hidden from encoding.","tags":[{"tag":"","text":"Sets whether the index should be hidden from encoding."},{"tag":"param:index","text":"Index to set hidden state for."},{"tag":"param:hidden","text":"Whether or not the index should be hidden."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"hidden","decl":"bool hidden","default":null}]},"JSON_Array":{"name":"JSON_Array","refLine":911,"docStart":24550,"docEnd":24758,"docs":{"brief":"Creates a new JSON_Array.","tags":[{"tag":"","text":"Creates a new JSON_Array."},{"tag":"param:type","text":"The type to enforce for this array, or\nJSON_Type_Invalid for no enforced type."},{"tag":"return","text":"A new JSON_Array."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"JSON_Array","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":"JSON_Type_Invalid"}]},"GetValue":{"name":"GetValue","refLine":258,"docStart":7398,"docEnd":7530,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetValue"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"any&","name":"value","decl":"any& value","default":null}]},"GetType":{"name":"GetType","refLine":149,"docStart":4272,"docEnd":4511,"docs":{"brief":"Gets the cell type stored at an index.","tags":[{"tag":"","text":"Gets the cell type stored at an index."},{"tag":"param:index","text":"Index to get value type for."},{"tag":"return","text":"Value type for index provided,\nor JSON_Type_Invalid if it does not exist."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"JSONCellType","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},"CanUseType":{"name":"CanUseType","refLine":89,"docStart":2601,"docEnd":2796,"docs":{"brief":"Checks whether the array accepts the type provided.","tags":[{"tag":"","text":"Checks whether the array accepts the type provided."},{"tag":"param:type","text":"Type to check for enforcement."},{"tag":"return","text":"True if the type can be used, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},"GetInt":{"name":"GetInt","refLine":303,"docStart":8633,"docEnd":8763,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetInt"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"default_value","decl":"int default_value","default":"-1"}]},"IndexOfString":{"name":"IndexOfString","refLine":570,"docStart":15122,"docEnd":15313,"docs":{"brief":"Finds the index of a string in the array.","tags":[{"tag":"","text":"Finds the index of a string in the array."},{"tag":"param:value","text":"String to search for."},{"tag":"return","text":"The index of the string if it is found, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},"GetHidden":{"name":"GetHidden","refLine":174,"docStart":5069,"docEnd":5271,"docs":{"brief":"Gets whether the index should be hidden from encoding.","tags":[{"tag":"","text":"Gets whether the index should be hidden from encoding."},{"tag":"param:index","text":"Index to get hidden state for."},{"tag":"return","text":"Whether or not the index should be hidden."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},"GetIndexAsString":{"name":"GetIndexAsString","refLine":113,"docStart":3215,"docEnd":3490,"docs":{"brief":"Outputs an index as a string.","tags":[{"tag":"","text":"Outputs an index as a string."},{"tag":"param:index","text":"Index to output."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"return","text":"True if the index is valid, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]},"Contains":{"name":"Contains","refLine":595,"docStart":15825,"docEnd":16011,"docs":{"brief":"Determines whether the array contains a value.","tags":[{"tag":"","text":"Determines whether the array contains a value."},{"tag":"param:value","text":"Value to search for."},{"tag":"return","text":"True if the value is found, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"any","name":"value","decl":"any value","default":null}]},"GetMeta":{"name":"GetMeta","refLine":132,"docStart":3841,"docEnd":3972,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetMeta"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"any","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null},{"type":"any","name":"default_value","decl":"any default_value","default":null}]},"ExportValues":{"name":"ExportValues","refLine":850,"docStart":23221,"docEnd":23380,"docs":{"brief":"Exports the instance's values into a native array.","tags":[{"tag":"","text":"Exports the instance's values into a native array."},{"tag":"param:values","text":"Array to export to."},{"tag":"param:size","text":"Size of array."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"void","arguments":[{"type":"any[]","name":"values","decl":"any[] values","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]},"ExportStrings":{"name":"ExportStrings","refLine":868,"docStart":23663,"docEnd":23823,"docs":{"brief":"Exports the instance's strings into a native array.","tags":[{"tag":"","text":"Exports the instance's strings into a native array."},{"tag":"param:values","text":"Array to export to."},{"tag":"param:size","text":"Size of array."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"void","arguments":[{"type":"char[][]","name":"values","decl":"char[][] values","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int","name":"max_string_size","decl":"int max_string_size","default":null}]},"ContainsString":{"name":"ContainsString","refLine":606,"docStart":16107,"docEnd":16296,"docs":{"brief":"Determines whether the array contains a string.","tags":[{"tag":"","text":"Determines whether the array contains a string."},{"tag":"param:value","text":"String to search for."},{"tag":"return","text":"True if the string is found, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},"SetObject":{"name":"SetObject","refLine":443,"docStart":12241,"docEnd":12372,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetObject"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSON_Object","name":"value","decl":"JSON_Object value","default":null}]},"PushString":{"name":"PushString","refLine":467,"docStart":12765,"docEnd":12940,"docs":{"brief":"Pushes a string to the end of the array.","tags":[{"tag":"","text":"Pushes a string to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"The element's index on success, -1 otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},"GetString":{"name":"GetString","refLine":288,"docStart":8196,"docEnd":8329,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"MetaStringMap.GetString"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"value","decl":"char[] value","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"size","decl":"int& size","default":"0"}]},"SetSize":{"name":"SetSize","refLine":232,"docStart":6605,"docEnd":6842,"docs":{"brief":"Sets the length of the string stored at a index.","tags":[{"tag":"","text":"Sets the length of the string stored at a index."},{"tag":"param:index","text":"Index to set string length for."},{"tag":"param:length","text":"Length to set string to."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"length","decl":"int length","default":null}]},"RemoveMeta":{"name":"RemoveMeta","refLine":203,"docStart":5858,"docEnd":5990,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.RemoveMeta"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null}]},"SetBool":{"name":"SetBool","refLine":424,"docStart":11773,"docEnd":11902,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetBool"}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]},"Concat":{"name":"Concat","refLine":688,"docStart":18471,"docEnd":18895,"docs":{"brief":"Concatenates the entries from the specified array\non to the end of this array.","tags":[{"tag":"","text":"Concatenates the entries from the specified array\non to the end of this array."},{"tag":"param:from","text":"Array to concat entries from."},{"tag":"return","text":"True on success, false otherwise."},{"tag":"error","text":"If the object being merged is an object or the\narrays being merged don't have the same strict\ntype set, an error will be thrown."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"JSON_Array","name":"from","decl":"JSON_Array from","default":null}]}},"properties":{"Super":{"name":"Super","refLine":52,"docStart":1817,"docEnd":1902,"docs":{"brief":"Views the instance as its superclass to access overridden methods.","tags":[{"tag":"","text":"Views the instance as its superclass to access overridden methods."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"type":"JSON_Object","getter":true,"setter":false},"Type":{"name":"Type","refLine":63,"docStart":2039,"docEnd":2089,"docs":{"brief":"The enforced type of the array.","tags":[{"tag":"","text":"The enforced type of the array."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"type":"JSONCellType","getter":true,"setter":true},"MaxStringLength":{"name":"MaxStringLength","refLine":746,"docStart":20452,"docEnd":20517,"docs":{"brief":"The length of the longest string in the array.","tags":[{"tag":"","text":"The length of the longest string in the array."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"type":"int","getter":true,"setter":false}}}},"enumstructs":{},"constants":{},"defines":{"_json_array_included":{"name":"_json_array_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"36b928581e9f5846c0361d499cd2e51799ed1b70","count":87,"time":1571074934},"last_updated":{"hash":"36b928581e9f5846c0361d499cd2e51799ed1b70","count":87,"time":1571074934}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"json":{"functions":{"json_copy_deep":{"name":"json_copy_deep","refLine":726,"docStart":22570,"docEnd":22713,"docs":{"brief":"Creates a deep copy of the specified object.","tags":[{"tag":"","text":"Creates a deep copy of the specified object."},{"tag":"param:obj","text":"Object to copy."},{"tag":"return","text":"A deep copy of the specified object."}]},"metadata":{"created":{"hash":"9da625e5cfceff3f0fed430438908b84cdc76316","count":101,"time":1578937374},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"JSON_Object","name":"obj","decl":"JSON_Object obj","default":null}]},"json_cleanup_and_delete":{"name":"json_cleanup_and_delete","refLine":617,"docStart":19071,"docEnd":19178,"docs":{"brief":"Cleans up an object and sets the passed variable to null.","tags":[{"tag":"","text":"Cleans up an object and sets the passed variable to null."},{"tag":"param:obj","text":"Object to clean up."}]},"metadata":{"created":{"hash":"6a8188b88aaea559fac541ac62e867a7907f0d04","count":141,"time":1586195664},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"void","arguments":[{"type":"JSON_Object&","name":"obj","decl":"JSON_Object &obj","default":null}]},"json_decode":{"name":"json_decode","refLine":254,"docStart":7606,"docEnd":8204,"docs":{"brief":"Decodes a JSON string into a JSON instance.","tags":[{"tag":"","text":"Decodes a JSON string into a JSON instance."},{"tag":"param:buffer","text":"Buffer to decode."},{"tag":"param:options","text":"Bitwise combination of JSON_DECODE_* options.\n[default: JSON_NONE]"},{"tag":"param:pos","text":"Current position of the decoder as bytes\noffset into the buffer."},{"tag":"param:depth","text":"Current nested depth of the decoder."},{"tag":"return","text":"JSON instance or null if decoding failed becase\nthe buffer didn't contain valid JSON."},{"tag":"error","text":"If the buffer does not contain valid JSON,\nan error will be thrown."}]},"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"int","name":"options","decl":"int options","default":"JSON_NONE"},{"type":"int&","name":"pos","decl":"int& pos","default":"0"},{"type":"int","name":"depth","decl":"int depth","default":"0"}]},"json_encode":{"name":"json_encode","refLine":56,"docStart":1840,"docEnd":2223,"docs":{"brief":"Encodes a JSON instance into its string representation.","tags":[{"tag":"","text":"Encodes a JSON instance into its string representation."},{"tag":"param:obj","text":"Object to encode."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:options","text":"Bitwise combination of JSON_ENCODE_* options.\n[default: JSON_NONE]"},{"tag":"param:depth","text":"The current depth of the encoder. [default: 0]"}]},"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"f13f052e663bc40243819ce498507c5cf0da46fb","count":172,"time":1586505303}},"kind":"stock","returnType":"void","arguments":[{"type":"JSON_Object","name":"obj","decl":"JSON_Object obj","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int","name":"options","decl":"int options","default":"JSON_NONE"},{"type":"int","name":"depth","decl":"int depth","default":"0"}]},"json_copy_shallow":{"name":"json_copy_shallow","refLine":710,"docStart":22204,"docEnd":22353,"docs":{"brief":"Creates a shallow copy of the specified object.","tags":[{"tag":"","text":"Creates a shallow copy of the specified object."},{"tag":"param:obj","text":"Object to copy."},{"tag":"return","text":"A shallow copy of the specified object."}]},"metadata":{"created":{"hash":"9da625e5cfceff3f0fed430438908b84cdc76316","count":101,"time":1578937374},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"JSON_Object","name":"obj","decl":"JSON_Object obj","default":null}]},"json_cleanup":{"name":"json_cleanup","refLine":583,"docStart":18314,"docEnd":18431,"docs":{"brief":"Recursively cleans up the instance and any instances stored within.","tags":[{"tag":"","text":"Recursively cleans up the instance and any instances stored within."},{"tag":"param:obj","text":"Object to clean up."}]},"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"void","arguments":[{"type":"JSON_Object","name":"obj","decl":"JSON_Object obj","default":null}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"_json_included":{"name":"_json_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"errors":{"functions":{"json_set_last_error":{"name":"json_set_last_error","refLine":48,"docStart":1724,"docEnd":1918,"docs":{"brief":"Stores the error provided as the 'last error' for later access.","tags":[{"tag":"","text":"Stores the error provided as the 'last error' for later access."},{"tag":"param:error","text":"Error to store."},{"tag":"param:...","text":"Further arguments to pass to message formatter."}]},"metadata":{"created":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452},"last_updated":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452}},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"error","decl":"const char[] error","default":null},{"type":"any...","name":"...","decl":"any...","default":null}]},"json_get_last_error":{"name":"json_get_last_error","refLine":61,"docStart":2049,"docEnd":2334,"docs":{"brief":"Retrieves the last error encountered and stores it in the buffer provided.","tags":[{"tag":"","text":"Retrieves the last error encountered and stores it in the buffer provided."},{"tag":"param:buffer","text":"String buffer."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"return","text":"True if the error was copied successfuly,\nfalse otherwise."}]},"metadata":{"created":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452},"last_updated":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452}},"kind":"stock","returnType":"bool","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"_json_helpers_errors_included":{"name":"_json_helpers_errors_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452},"last_updated":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"string":{"functions":{"json_char_is_hex":{"name":"json_char_is_hex","refLine":224,"docStart":7030,"docEnd":7222,"docs":{"brief":"Checks whether the provided character is a valid hexadecimal character.","tags":[{"tag":"","text":"Checks whether the provided character is a valid hexadecimal character."},{"tag":"param:c","text":"Character to check."},{"tag":"return","text":"True if c is a hexadecimal character, false otherwise."}]},"metadata":{"created":{"hash":"3ec8212cce54d117a7cf51dd2f604d0ac2473c34","count":198,"time":1591272729},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"c","decl":"int c","default":null}]},"json_unescape_string":{"name":"json_unescape_string","refLine":73,"docStart":2380,"docEnd":2523,"docs":{"brief":"Unescapes a string in-place in a buffer.","tags":[{"tag":"","text":"Unescapes a string in-place in a buffer."},{"tag":"param:buffer","text":"String buffer."},{"tag":"param:max_size","text":"Maximum size of string buffer."}]},"metadata":{"created":{"hash":"bf855614908e8e3a15e7b23d33c226f7338d9a1e","count":73,"time":1569849973},"last_updated":{"hash":"0d7337c9af8e8a1ed92cda3d801c4b3acc0c8ffe","count":74,"time":1569854548}},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]},"json_cell_string_size":{"name":"json_cell_string_size","refLine":190,"docStart":5962,"docEnd":6164,"docs":{"brief":"Calculates the maximum buffer length required to\nstore the JSON cell representation of a string.","tags":[{"tag":"","text":"Calculates the maximum buffer length required to\nstore the JSON cell representation of a string."},{"tag":"param:length","text":"The length of the string."},{"tag":"return","text":"Maximum buffer length."}]},"metadata":{"created":{"hash":"3c40c9985dc811e7b7d974dbac18f24fddd0a088","count":160,"time":1586458705},"last_updated":{"hash":"64507c096c72186dbd0208d9b15d26d89553e78a","count":236,"time":1646995542}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"input","decl":"const char[] input","default":null}]},"json_cell_string":{"name":"json_cell_string","refLine":155,"docStart":4581,"docEnd":4798,"docs":{"brief":"Generates the JSON cell representation of a string.","tags":[{"tag":"","text":"Generates the JSON cell representation of a string."},{"tag":"param:input","text":"Value to generate output for."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:max_size","text":"Maximum size of string buffer."}]},"metadata":{"created":{"hash":"3c40c9985dc811e7b7d974dbac18f24fddd0a088","count":160,"time":1586458705},"last_updated":{"hash":"3c40c9985dc811e7b7d974dbac18f24fddd0a088","count":160,"time":1586458705}},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"input","decl":"const char[] input","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]},"json_escape_string":{"name":"json_escape_string","refLine":55,"docStart":1963,"docEnd":2104,"docs":{"brief":"Escapes a string in-place in a buffer.","tags":[{"tag":"","text":"Escapes a string in-place in a buffer."},{"tag":"param:buffer","text":"String buffer."},{"tag":"param:max_size","text":"Maximum size of string buffer."}]},"metadata":{"created":{"hash":"bf855614908e8e3a15e7b23d33c226f7338d9a1e","count":73,"time":1569849973},"last_updated":{"hash":"0d7337c9af8e8a1ed92cda3d801c4b3acc0c8ffe","count":74,"time":1569854548}},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"_json_helpers_string_included":{"name":"_json_helpers_string_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"object":{"functions":{},"methodmaps":{"JSON_Object":{"name":"JSON_Object","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"parent":"MetaStringMap","methods":{"GetMeta":{"name":"GetMeta","refLine":187,"docStart":4886,"docEnd":5179,"docs":{"brief":"Gets the requested meta info for a key.","tags":[{"tag":"","text":"Gets the requested meta info for a key."},{"tag":"param:key","text":"Key to get meta info for."},{"tag":"param:meta","text":"Meta info to get."},{"tag":"param:default_value","text":"Value to return if meta does not exist."},{"tag":"return","text":"The meta value."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"any","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null},{"type":"any","name":"default_value","decl":"any default_value","default":null}]},"SetMeta":{"name":"SetMeta","refLine":261,"docStart":7051,"docEnd":7289,"docs":{"brief":"Sets meta info on a key.","tags":[{"tag":"","text":"Sets meta info on a key."},{"tag":"param:key","text":"Key to set meta info for."},{"tag":"param:meta","text":"Meta info to set."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null},{"type":"any","name":"value","decl":"any value","default":null}]},"SetObject":{"name":"SetObject","refLine":475,"docStart":13438,"docEnd":13649,"docs":{"brief":"Sets the JSON object stored at a key.","tags":[{"tag":"","text":"Sets the JSON object stored at a key."},{"tag":"param:key","text":"Key to set to object value."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSON_Object","name":"value","decl":"JSON_Object value","default":null}]},"GetSize":{"name":"GetSize","refLine":221,"docStart":5934,"docEnd":6176,"docs":{"brief":"Gets the size of the string stored at a key.","tags":[{"tag":"","text":"Gets the size of the string stored at a key."},{"tag":"param:key","text":"Key to get buffer size for."},{"tag":"return","text":"Buffer size for string at key provided,\nor -1 if it is not a string/does not exist."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"JSON_Object":{"name":"JSON_Object","refLine":706,"docStart":19796,"docEnd":19887,"docs":{"brief":"Creates a new JSON_Object.","tags":[{"tag":"","text":"Creates a new JSON_Object."},{"tag":"return","text":"A new JSON_Object."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"JSON_Object","arguments":[]},"Merge":{"name":"Merge","refLine":576,"docStart":16010,"docEnd":16496,"docs":{"brief":"Merges in the entries from the specified object,\noptionally replacing existing entries with the same key.","tags":[{"tag":"","text":"Merges in the entries from the specified object,\noptionally replacing existing entries with the same key."},{"tag":"param:from","text":"Object to merge entries from."},{"tag":"param:options","text":"Bitwise combination of JSON_MERGE_* options.\n[default: JSON_MERGE_REPLACE]"},{"tag":"return","text":"True on success, false otherwise."},{"tag":"error","text":"If the object being merged is an array,\nan error will be thrown."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"JSON_Object","name":"from","decl":"JSON_Object from","default":null},{"type":"int","name":"options","decl":"int options","default":"JSON_MERGE_REPLACE"}]},"GetType":{"name":"GetType","refLine":207,"docStart":5532,"docEnd":5752,"docs":{"brief":"Gets the cell type stored at a key.","tags":[{"tag":"","text":"Gets the cell type stored at a key."},{"tag":"param:key","text":"Key to get value type for."},{"tag":"return","text":"Value type for key provided,\nor JSON_Type_Invalid if it does not exist."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"JSONCellType","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"SetFloat":{"name":"SetFloat","refLine":447,"docStart":12614,"docEnd":12818,"docs":{"brief":"Sets the float stored at a key.","tags":[{"tag":"","text":"Sets the float stored at a key."},{"tag":"param:key","text":"Key to set to float value."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},"GetHidden":{"name":"GetHidden","refLine":232,"docStart":6303,"docEnd":6491,"docs":{"brief":"Gets whether the key should be hidden from encoding.","tags":[{"tag":"","text":"Gets whether the key should be hidden from encoding."},{"tag":"param:key","text":"Key to get hidden state for."},{"tag":"return","text":"Whether or not the key should be hidden."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"GetKey":{"name":"GetKey","refLine":147,"docStart":3862,"docEnd":4118,"docs":{"brief":"Gets the key stored at an index.","tags":[{"tag":"","text":"Gets the key stored at an index."},{"tag":"param:index","text":"Index of key."},{"tag":"param:value","text":"Buffer to store key at."},{"tag":"param:max_size","text":"Maximum size of value buffer."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"value","decl":"char[] value","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]},"SetBool":{"name":"SetBool","refLine":461,"docStart":13029,"docEnd":13231,"docs":{"brief":"Sets the bool stored at a key.","tags":[{"tag":"","text":"Sets the bool stored at a key."},{"tag":"param:key","text":"Key to set to bool value."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]},"GetKeySize":{"name":"GetKeySize","refLine":126,"docStart":3321,"docEnd":3517,"docs":{"brief":"Returns the buffer size required to store the key at the specified index.","tags":[{"tag":"","text":"Returns the buffer size required to store the key at the specified index."},{"tag":"param:index","text":"Index of key."},{"tag":"return","text":"Buffer size required to store key."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},"GetIndex":{"name":"GetIndex","refLine":244,"docStart":6627,"docEnd":6872,"docs":{"brief":"Gets the index of a key (if ordered keys are enabled).","tags":[{"tag":"","text":"Gets the index of a key (if ordered keys are enabled)."},{"tag":"param:key","text":"Key to get index of."},{"tag":"return","text":"Index of the key provided,\nor -1 if it does not exist or ordered keys are disabled."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"RemoveKeyFromOrder":{"name":"RemoveKeyFromOrder","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"SetString":{"name":"SetString","refLine":418,"docStart":11732,"docEnd":11938,"docs":{"brief":"Sets the string stored at a key.","tags":[{"tag":"","text":"Sets the string stored at a key."},{"tag":"param:key","text":"Key to set to string value."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},"TrackKeyOrder":{"name":"TrackKeyOrder","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"index","decl":"int index","default":"-1"}]},"SetInt":{"name":"SetInt","refLine":433,"docStart":12211,"docEnd":12411,"docs":{"brief":"Sets the int stored at a key.","tags":[{"tag":"","text":"Sets the int stored at a key."},{"tag":"param:key","text":"Key to set to int value."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},"EnableOrderedKeys":{"name":"EnableOrderedKeys","refLine":166,"docStart":4505,"docEnd":4651,"docs":{"brief":"Enable tracking order of key insertion.","tags":[{"tag":"","text":"Enable tracking order of key insertion."},{"tag":"return","text":"True on success, false if the object already has unordered keys."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[]},"Encode":{"name":"Encode","refLine":654,"docStart":18811,"docEnd":18928,"docs":{"brief":"Makes a global call with this\ninstance passed as the object.","tags":[{"tag":"","text":"Makes a global call with this\ninstance passed as the object."},{"tag":"see","text":"json_encode"}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int","name":"options","decl":"int options","default":"JSON_NONE"},{"type":"int","name":"depth","decl":"int depth","default":"0"}]},"Rename":{"name":"Rename","refLine":513,"docStart":14411,"docEnd":14703,"docs":{"brief":"Renames the key of an existing item in the object.","tags":[{"tag":"","text":"Renames the key of an existing item in the object."},{"tag":"param:from","text":"Existing key to rename."},{"tag":"param:to","text":"New key."},{"tag":"param:replace","text":"Should the 'to' key should be replaced if it exists?"},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"from","decl":"const char[] from","default":null},{"type":"const char[]","name":"to","decl":"const char[] to","default":null},{"type":"bool","name":"replace","decl":"bool replace","default":"true"}]},"SetSize":{"name":"SetSize","refLine":305,"docStart":8413,"docEnd":8646,"docs":{"brief":"Sets the length of the string stored at a key.","tags":[{"tag":"","text":"Sets the length of the string stored at a key."},{"tag":"param:key","text":"Key to set string length for."},{"tag":"param:length","text":"Length to set string to."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"length","decl":"int length","default":null}]},"SetHidden":{"name":"SetHidden","refLine":317,"docStart":8776,"docEnd":9030,"docs":{"brief":"Sets whether the key should be hidden from encoding.","tags":[{"tag":"","text":"Sets whether the key should be hidden from encoding."},{"tag":"param:key","text":"Key to set hidden state for."},{"tag":"param:hidden","text":"Whether or not the key should be hidden."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"hidden","decl":"bool hidden","default":null}]},"SetType":{"name":"SetType","refLine":293,"docStart":8076,"docEnd":8278,"docs":{"brief":"Sets the cell type stored at a key.","tags":[{"tag":"","text":"Sets the cell type stored at a key."},{"tag":"param:key","text":"Key to set value type for."},{"tag":"param:type","text":"Type to set key to."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},"GetObject":{"name":"GetObject","refLine":399,"docStart":11231,"docEnd":11493,"docs":{"brief":"Retrieves the JSON object stored at a key.","tags":[{"tag":"","text":"Retrieves the JSON object stored at a key."},{"tag":"param:key","text":"Key to retrieve object value for."},{"tag":"param:default_value","text":"Value to return if the key does not exist."},{"tag":"return","text":"Value stored at key."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSON_Object","name":"default_value","decl":"JSON_Object default_value","default":"null"}]},"Remove":{"name":"Remove","refLine":492,"docStart":13907,"docEnd":14096,"docs":{"brief":"Removes an item from the object by key.","tags":[{"tag":"","text":"Removes an item from the object by key."},{"tag":"param:key","text":"Key of object to remove."},{"tag":"return","text":"True on success, false if the value was never set."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"RemoveMeta":{"name":"RemoveMeta","refLine":277,"docStart":7589,"docEnd":7793,"docs":{"brief":"Removes meta info from a key.","tags":[{"tag":"","text":"Removes meta info from a key."},{"tag":"param:key","text":"Key to remove meta info from."},{"tag":"param:meta","text":"Meta info to remove."},{"tag":"return","text":"True on success, false otherwise."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null}]},"ShallowCopy":{"name":"ShallowCopy","refLine":670,"docStart":19137,"docEnd":19257,"docs":{"brief":"Makes a global call with this\ninstance passed as the object.","tags":[{"tag":"","text":"Makes a global call with this\ninstance passed as the object."},{"tag":"see","text":"json_copy_deep"}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"JSON_Object","arguments":[]},"Iterate":{"name":"Iterate","refLine":106,"docStart":2913,"docEnd":3044,"docs":{"brief":"Refreshes the stored snapshot and returns the current length.","tags":[{"tag":"","text":"Refreshes the stored snapshot and returns the current length."},{"tag":"return","text":"The length of the instance."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"int","arguments":[]},"DeepCopy":{"name":"DeepCopy","refLine":681,"docStart":19352,"docEnd":19472,"docs":{"brief":"Makes a global call with this\ninstance passed as the object.","tags":[{"tag":"","text":"Makes a global call with this\ninstance passed as the object."},{"tag":"see","text":"json_copy_deep"}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"JSON_Object","arguments":[]},"Cleanup":{"name":"Cleanup","refLine":692,"docStart":19561,"docEnd":19679,"docs":{"brief":"Makes a global call with this\ninstance passed as the object.","tags":[{"tag":"","text":"Makes a global call with this\ninstance passed as the object."},{"tag":"see","text":"json_cleanup"}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"kind":"stock","returnType":"void","arguments":[]}},"properties":{"Snap":{"name":"Snap","refLine":83,"docStart":2476,"docEnd":2538,"docs":{"brief":"The latest snapshot stored for this object.","tags":[{"tag":"","text":"The latest snapshot stored for this object."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"type":"StringMapSnapshot","getter":true,"setter":true},"Super":{"name":"Super","refLine":52,"docStart":1840,"docEnd":1925,"docs":{"brief":"Views the instance as its superclass to access overridden methods.","tags":[{"tag":"","text":"Views the instance as its superclass to access overridden methods."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"type":"MetaStringMap","getter":true,"setter":false},"OrderedKeys":{"name":"OrderedKeys","refLine":73,"docStart":2259,"docEnd":2330,"docs":{"brief":"Whether the current object has ordered key tracking.","tags":[{"tag":"","text":"Whether the current object has ordered key tracking."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"type":"bool","getter":true,"setter":false},"IsArray":{"name":"IsArray","refLine":63,"docStart":2066,"docEnd":2124,"docs":{"brief":"Whether the current object is an array.","tags":[{"tag":"","text":"Whether the current object is an array."}]},"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"type":"bool","getter":true,"setter":false}}}},"enumstructs":{},"constants":{},"defines":{"_json_object_included":{"name":"_json_object_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"definitions":{"functions":{"json_format_meta_key":{"name":"json_format_meta_key","refLine":145,"docStart":3895,"docEnd":4173,"docs":{"brief":"Formats the key/metainfo combination into a buffer.","tags":[{"tag":"","text":"Formats the key/metainfo combination into a buffer."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:key","text":"Key to generate metakey for."},{"tag":"param:meta","text":"Meta information to generate metakey for."}]},"metadata":{"created":{"hash":"ca5d82469be1789fe95ca425a537275373453007","count":148,"time":1586451664},"last_updated":{"hash":"f209d339fa9c96835563f1322fd5a38af53315ec","count":200,"time":1591272742}},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null}]},"json_meta_key_length":{"name":"json_meta_key_length","refLine":131,"docStart":3609,"docEnd":3789,"docs":{"brief":"Calculates the length required to store a meta key\nfor a specified key/metainfo combination.","tags":[{"tag":"","text":"Calculates the length required to store a meta key\nfor a specified key/metainfo combination."},{"tag":"param:unknown","text":"key"},{"tag":"return","text":"The length required to store the meta key."}]},"metadata":{"created":{"hash":"ca5d82469be1789fe95ca425a537275373453007","count":148,"time":1586451664},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"JSON_DECODE_SINGLE_QUOTES":{"name":"JSON_DECODE_SINGLE_QUOTES","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"3fa7a6c480dbd5ebf3f436e243fa7889ed9824ea","count":158,"time":1586458705},"last_updated":{"hash":"79bd71d029a1596824a0cd463354b18eff621379","count":194,"time":1591271938}},"value":"1 << 0"},"JSON_ENFORCE_TYPE_KEY":{"name":"JSON_ENFORCE_TYPE_KEY","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"value":"\"enforce_type\""},"JSON_DECODE_ORDERED_KEYS":{"name":"JSON_DECODE_ORDERED_KEYS","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"value":"1 << 1"},"JSON_NULL_BUFFER_SIZE":{"name":"JSON_NULL_BUFFER_SIZE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"4dbc7868f310e909ba91b17e61c93216b4fe24b1","count":138,"time":1586191265},"last_updated":{"hash":"4dbc7868f310e909ba91b17e61c93216b4fe24b1","count":138,"time":1586191265}},"value":"5"},"JSON_ARRAY_KEY":{"name":"JSON_ARRAY_KEY","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"value":"\"is_array\""},"JSON_BOOL_BUFFER_SIZE":{"name":"JSON_BOOL_BUFFER_SIZE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"4dbc7868f310e909ba91b17e61c93216b4fe24b1","count":138,"time":1586191265},"last_updated":{"hash":"4dbc7868f310e909ba91b17e61c93216b4fe24b1","count":138,"time":1586191265}},"value":"6"},"JSON_NONE":{"name":"JSON_NONE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bac9652512ad8d54ca1461f3a77b07bceb90546f","count":156,"time":1586458705},"last_updated":{"hash":"bac9652512ad8d54ca1461f3a77b07bceb90546f","count":156,"time":1586458705}},"value":"0"},"JSON_ENCODE_PRETTY":{"name":"JSON_ENCODE_PRETTY","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bac9652512ad8d54ca1461f3a77b07bceb90546f","count":156,"time":1586458705},"last_updated":{"hash":"bac9652512ad8d54ca1461f3a77b07bceb90546f","count":156,"time":1586458705}},"value":"1 << 0"},"JSON_SNAP_KEY":{"name":"JSON_SNAP_KEY","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"value":"\"snap\""},"JSON_INT_BUFFER_SIZE":{"name":"JSON_INT_BUFFER_SIZE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"4dbc7868f310e909ba91b17e61c93216b4fe24b1","count":138,"time":1586191265},"last_updated":{"hash":"4dbc7868f310e909ba91b17e61c93216b4fe24b1","count":138,"time":1586191265}},"value":"12"},"JSON_ORDERED_KEYS_KEY":{"name":"JSON_ORDERED_KEYS_KEY","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"value":"\"ordered_keys\""},"JSON_MERGE_REPLACE":{"name":"JSON_MERGE_REPLACE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"35b5d8dff35196ba42467914814efbee9ee2edd4","count":157,"time":1586458705},"last_updated":{"hash":"79bd71d029a1596824a0cd463354b18eff621379","count":194,"time":1591271938}},"value":"1 << 0"},"JSON_MERGE_CLEANUP":{"name":"JSON_MERGE_CLEANUP","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"35b5d8dff35196ba42467914814efbee9ee2edd4","count":157,"time":1586458705},"last_updated":{"hash":"79bd71d029a1596824a0cd463354b18eff621379","count":194,"time":1591271938}},"value":"1 << 1"},"JSON_FLOAT_BUFFER_SIZE":{"name":"JSON_FLOAT_BUFFER_SIZE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531}},"value":"32"},"_json_definitions_included":{"name":"_json_definitions_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531},"last_updated":{"hash":"8500fa22551914bef7d485d6e9a707fe558a4999","count":1,"time":1522600531}},"value":""}},"enums":{"JSONCellType":{"name":"JSONCellType","refLine":93,"docStart":3063,"docEnd":3109,"docs":{"brief":"Types of cells within a JSON object","tags":[{"tag":"","text":"Types of cells within a JSON object"}]},"metadata":{"created":{"hash":"04728bd9afc0f3149e22e99cf4ecbcdd43074edb","count":146,"time":1586451664},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"entries":{"JSON_Type_Invalid":{"name":"JSON_Type_Invalid","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"value":"-1"},"JSON_Type_Bool":{"name":"JSON_Type_Bool","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"value":null},"JSON_Type_Int":{"name":"JSON_Type_Int","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"value":null},"JSON_Type_Float":{"name":"JSON_Type_Float","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"value":null},"JSON_Type_String":{"name":"JSON_Type_String","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"value":"0"},"JSON_Type_Object":{"name":"JSON_Type_Object","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565},"last_updated":{"hash":"bb7dd520398d8551eb040c5b50b2c538c9d7ca57","count":169,"time":1586501565}},"value":null}}},"JSONMetaInfo":{"name":"JSONMetaInfo","refLine":115,"docStart":3492,"docEnd":3544,"docs":{"brief":"Types of metadata a JSON element can have","tags":[{"tag":"","text":"Types of metadata a JSON element can have"}]},"metadata":{"created":{"hash":"ca5d82469be1789fe95ca425a537275373453007","count":148,"time":1586451664},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"entries":{"JSON_Meta_Hidden":{"name":"JSON_Meta_Hidden","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"value":null},"JSON_Meta_Size":{"name":"JSON_Meta_Size","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"value":null},"JSON_Meta_Index":{"name":"JSON_Meta_Index","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"value":null},"JSON_Meta_Type":{"name":"JSON_Meta_Type","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542},"last_updated":{"hash":"a8b566aa469934756b5d7fced8ce6a9b7292e142","count":231,"time":1646995542}},"value":"0"}}}},"typesets":{},"typedefs":{}},"decode":{"functions":{"json_is_string":{"name":"json_is_string","refLine":70,"docStart":2198,"docEnd":2584,"docs":{"brief":"Checks whether the character at the beginning\nof the buffer is the start of a string.","tags":[{"tag":"","text":"Checks whether the character at the beginning\nof the buffer is the start of a string."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:allow_single_quotes","text":"Should strings using single quotes be accepted?"},{"tag":"return","text":"True if the first character in the buffer\nis the start of a string, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"bool","name":"allow_single_quotes","decl":"bool allow_single_quotes","default":"false"}]},"json_extract_string":{"name":"json_extract_string","refLine":415,"docStart":12705,"docEnd":13275,"docs":{"brief":"Extracts a JSON string from the buffer until a valid end point is reached.","tags":[{"tag":"","text":"Extracts a JSON string from the buffer until a valid end point is reached."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:pos","text":"Position to increment."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:output_max_size","text":"Maximum size of output string buffer."},{"tag":"param:is_array","text":"Whether the decoder is processing an array."},{"tag":"return","text":"True if pos has not reached the end\nof the buffer, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"pos","decl":"int& pos","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"output_max_size","decl":"int output_max_size","default":null},{"type":"bool","name":"is_array","decl":"bool is_array","default":null}]},"json_extract_until_end_size":{"name":"json_extract_until_end_size","refLine":279,"docStart":8584,"docEnd":9160,"docs":{"brief":"Calculates the size of the buffer required to store the next\nJSON cell stored in the provided buffer at the provided position.\nThis function is quite forgiving of malformed input and shouldn't be\nrelied upon as proof that the input is valid.","tags":[{"tag":"","text":"Calculates the size of the buffer required to store the next\nJSON cell stored in the provided buffer at the provided position.\nThis function is quite forgiving of malformed input and shouldn't be\nrelied upon as proof that the input is valid."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:pos","text":"Position to increment."},{"tag":"param:is_array","text":"Whether the decoder is processing an array."},{"tag":"return","text":"The size of the buffer required to store the cell."}]},"metadata":{"created":{"hash":"aadfc24065dfd0badf40eae5b528cb40549c4bb4","count":188,"time":1589553860},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int","name":"pos","decl":"int pos","default":null},{"type":"bool","name":"is_array","decl":"bool is_array","default":null}]},"json_is_int":{"name":"json_is_int","refLine":83,"docStart":2786,"docEnd":2963,"docs":{"brief":"Checks whether the buffer provided contains an int.","tags":[{"tag":"","text":"Checks whether the buffer provided contains an int."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"return","text":"True if buffer contains an int, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},"json_extract_until_end":{"name":"json_extract_until_end","refLine":312,"docStart":9660,"docEnd":10228,"docs":{"brief":"Extracts a JSON cell from the buffer until a valid end point is reached.","tags":[{"tag":"","text":"Extracts a JSON cell from the buffer until a valid end point is reached."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:pos","text":"Position to increment."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:output_max_size","text":"Maximum size of output string buffer."},{"tag":"param:is_array","text":"Whether the decoder is processing an array."},{"tag":"return","text":"True if pos has not reached the end\nof the buffer, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"pos","decl":"int& pos","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"output_max_size","decl":"int output_max_size","default":null},{"type":"bool","name":"is_array","decl":"bool is_array","default":null}]},"json_is_float":{"name":"json_is_float","refLine":127,"docStart":3864,"docEnd":4043,"docs":{"brief":"Checks whether the buffer provided contains a float.","tags":[{"tag":"","text":"Checks whether the buffer provided contains a float."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"return","text":"True if buffer contains a float, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},"json_extract_string_size":{"name":"json_extract_string_size","refLine":365,"docStart":11143,"docEnd":11723,"docs":{"brief":"Calculates the size of the buffer required to store the next\nJSON string stored in the provided buffer at the provided position.\nThis function is quite forgiving of malformed input and shouldn't be\nrelied upon as proof that the input is valid.","tags":[{"tag":"","text":"Calculates the size of the buffer required to store the next\nJSON string stored in the provided buffer at the provided position.\nThis function is quite forgiving of malformed input and shouldn't be\nrelied upon as proof that the input is valid."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:pos","text":"Position to increment."},{"tag":"param:is_array","text":"Whether the decoder is processing an array."},{"tag":"return","text":"The size of the buffer required to store the string."}]},"metadata":{"created":{"hash":"399906b99544efb606c23ca164f4385664e7c8ef","count":187,"time":1589553848},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int","name":"pos","decl":"int pos","default":null},{"type":"bool","name":"is_array","decl":"bool is_array","default":null}]},"json_skip_whitespace":{"name":"json_skip_whitespace","refLine":258,"docStart":8020,"docEnd":8385,"docs":{"brief":"Moves the position until it reaches a non-whitespace\ncharacter or the end of the buffer's maximum size.","tags":[{"tag":"","text":"Moves the position until it reaches a non-whitespace\ncharacter or the end of the buffer's maximum size."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:pos","text":"Position to increment."},{"tag":"return","text":"True if pos has not reached the end\nof the buffer, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"pos","decl":"int& pos","default":null}]},"json_is_whitespace":{"name":"json_is_whitespace","refLine":53,"docStart":1780,"docEnd":2025,"docs":{"brief":"Checks whether the character at the beginning of the buffer is whitespace.","tags":[{"tag":"","text":"Checks whether the character at the beginning of the buffer is whitespace."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"return","text":"True if the first character in the buffer\nis whitespace, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},"json_is_at_end":{"name":"json_is_at_end","refLine":236,"docStart":7322,"docEnd":7818,"docs":{"brief":"Checks whether the character at the beginning of the buffer\nis considered a valid 'end point' for an element,\nsuch as a colon (indicating the end of a key),\na comma (indicating the end of an element),\nor the end of an object or array.","tags":[{"tag":"","text":"Checks whether the character at the beginning of the buffer\nis considered a valid 'end point' for an element,\nsuch as a colon (indicating the end of a key),\na comma (indicating the end of an element),\nor the end of an object or array."},{"tag":"param:buffer","text":"String buffer of data."},{"tag":"param:is_array","text":"Whether the decoder is processing an array."},{"tag":"return","text":"True if the first character in the buffer\nis a valid element end point, false otherwise."}]},"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"bool","name":"is_array","decl":"bool is_array","default":null}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"_json_helpers_decode_included":{"name":"_json_helpers_decode_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582},"last_updated":{"hash":"6f007fe309e66236bc08601d68e520b19e239a5a","count":61,"time":1569517582}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"unicode":{"functions":{"json_utf8_to_ascii_size":{"name":"json_utf8_to_ascii_size","refLine":48,"docStart":1761,"docEnd":1982,"docs":{"brief":"Calculates how many bytes will be required to store the ASCII\nrepresentation of a UTF-8 character.","tags":[{"tag":"","text":"Calculates how many bytes will be required to store the ASCII\nrepresentation of a UTF-8 character."},{"tag":"param:c","text":"The UTF-8 character."},{"tag":"return","text":"The number of bytes required, or -1 if c is invalid."}]},"metadata":{"created":{"hash":"636d474b63f8c42fca8284501f9b44b96cfd9bd1","count":201,"time":1591272742},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"c","decl":"int c","default":null}]},"json_ascii_to_utf8":{"name":"json_ascii_to_utf8","refLine":128,"docStart":3520,"docEnd":3724,"docs":{"brief":"Converts bytes to their UTF-8 int representation.","tags":[{"tag":"","text":"Converts bytes to their UTF-8 int representation."},{"tag":"param:ascii","text":"The ascii/bytes to convert."},{"tag":"param:max_size","text":"Maximum size of ascii."},{"tag":"return","text":"The UTF-8 int representation."}]},"metadata":{"created":{"hash":"636d474b63f8c42fca8284501f9b44b96cfd9bd1","count":201,"time":1591272742},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"ascii","decl":"const char[] ascii","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"size","decl":"int& size","default":null}]},"json_utf8_to_ascii":{"name":"json_utf8_to_ascii","refLine":78,"docStart":2347,"docEnd":2631,"docs":{"brief":"Converts a UTF-8 character to its ASCII representation.","tags":[{"tag":"","text":"Converts a UTF-8 character to its ASCII representation."},{"tag":"param:c","text":"The UTF-8 character."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"return","text":"The number of bytes written, or -1 if c is invalid."}]},"metadata":{"created":{"hash":"636d474b63f8c42fca8284501f9b44b96cfd9bd1","count":201,"time":1591272742},"last_updated":{"hash":"fe85b1ab5d4d1315ae0516e603edeb0a4f1ec0d9","count":224,"time":1644627836}},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"c","decl":"int c","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"_json_helpers_unicode_included":{"name":"_json_helpers_unicode_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"636d474b63f8c42fca8284501f9b44b96cfd9bd1","count":201,"time":1591272742},"last_updated":{"hash":"636d474b63f8c42fca8284501f9b44b96cfd9bd1","count":201,"time":1591272742}},"value":""}},"enums":{},"typesets":{},"typedefs":{}},"metastringmap":{"functions":{},"methodmaps":{"MetaStringMap":{"name":"MetaStringMap","refLine":47,"docStart":1729,"docEnd":1972,"docs":{"brief":"A TypedStringMap which contains a nested `Data` `TypedStringMap` property.\nStandard methods and properties have been overridden to run against `Data`,\nbut you can access the parent methods/properties using the `Meta` property.","tags":[{"tag":"","text":"A TypedStringMap which contains a nested `Data` `TypedStringMap` property.\nStandard methods and properties have been overridden to run against `Data`,\nbut you can access the parent methods/properties using the `Meta` property."}]},"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"parent":"TypedStringMap","methods":{"GetBool":{"name":"GetBool","refLine":131,"docStart":3782,"docEnd":3816,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.GetBool"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"default_value","decl":"bool default_value","default":"false"}]},"GetInt":{"name":"GetInt","refLine":119,"docStart":3434,"docEnd":3467,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.GetInt"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"default_value","decl":"int default_value","default":"-1"}]},"HasKey":{"name":"HasKey","refLine":193,"docStart":5273,"docEnd":5306,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.HasKey"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"MetaStringMap":{"name":"MetaStringMap","refLine":231,"docStart":5937,"docEnd":6032,"docs":{"brief":"Creates a new MetaStringMap.","tags":[{"tag":"","text":"Creates a new MetaStringMap."},{"tag":"return","text":"A new MetaStringMap."}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"MetaStringMap","arguments":[]},"SetHandle":{"name":"SetHandle","refLine":177,"docStart":4950,"docEnd":4986,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.SetHandle"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"Handle","name":"value","decl":"Handle value","default":null}]},"SetFloat":{"name":"SetFloat","refLine":165,"docStart":4642,"docEnd":4677,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.SetFloat"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},"Snapshot":{"name":"Snapshot","refLine":217,"docStart":5767,"docEnd":5797,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.Snapshot"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"StringMapSnapshot","arguments":[]},"GetValue":{"name":"GetValue","refLine":93,"docStart":2822,"docEnd":2852,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.GetValue"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"any&","name":"value","decl":"any& value","default":null}]},"SetString":{"name":"SetString","refLine":153,"docStart":4333,"docEnd":4364,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.SetString"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},"SetValue":{"name":"SetValue","refLine":147,"docStart":4184,"docEnd":4214,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.SetValue"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"any","name":"value","decl":"any value","default":null}]},"Remove":{"name":"Remove","refLine":183,"docStart":5110,"docEnd":5138,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.Remove"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},"GetString":{"name":"GetString","refLine":108,"docStart":3199,"docEnd":3230,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.GetString"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"char[]","name":"value","decl":"char[] value","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"size","decl":"int& size","default":"0"}]},"SetInt":{"name":"SetInt","refLine":159,"docStart":4494,"docEnd":4527,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.SetInt"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},"Clear":{"name":"Clear","refLine":199,"docStart":5403,"docEnd":5430,"docs":{"brief":"","tags":[{"tag":"see","text":"StringMap.Clear"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"void","arguments":[]},"GetHandle":{"name":"GetHandle","refLine":137,"docStart":3958,"docEnd":3994,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.GetHandle"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"Handle","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"Handle","name":"default_value","decl":"Handle default_value","default":"null"}]},"GetOptionalValue":{"name":"GetOptionalValue","refLine":102,"docStart":2972,"docEnd":3044,"docs":{"brief":"","tags":[{"tag":"","text":""},{"tag":"see","text":"TypedStringMap.GetOptionalValue"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"any","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"any","name":"default_value","decl":"any default_value","default":"-1"}]},"Cleanup":{"name":"Cleanup","refLine":210,"docStart":5588,"docEnd":5676,"docs":{"brief":"Deletes the instance's data StringMap as well as the instance itself.","tags":[{"tag":"","text":"Deletes the instance's data StringMap as well as the instance itself."}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"void","arguments":[]},"GetFloat":{"name":"GetFloat","refLine":125,"docStart":3602,"docEnd":3637,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.GetFloat"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"float","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"float","name":"default_value","decl":"float default_value","default":"-1.000000"}]},"SetBool":{"name":"SetBool","refLine":171,"docStart":4798,"docEnd":4832,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.SetBool"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]}},"properties":{"Length":{"name":"Length","refLine":81,"docStart":2632,"docEnd":2665,"docs":{"brief":"","tags":[{"tag":"see","text":"TypedStringMap.Length"}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"type":"int","getter":true,"setter":false},"Data":{"name":"Data","refLine":67,"docStart":2291,"docEnd":2357,"docs":{"brief":"Gets the nested stringmap where data is stored.","tags":[{"tag":"","text":"Gets the nested stringmap where data is stored."}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"type":"TypedStringMap","getter":true,"setter":true},"Meta":{"name":"Meta","refLine":56,"docStart":2064,"docEnd":2149,"docs":{"brief":"Views the instance as its superclass to access overridden methods.","tags":[{"tag":"","text":"Views the instance as its superclass to access overridden methods."}]},"metadata":{"created":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542},"last_updated":{"hash":"239152c3696795f5fa939974c9ae798d5444bb3f","count":235,"time":1646995542}},"type":"TypedStringMap","getter":true,"setter":false}}}},"enumstructs":{},"constants":{},"defines":{"_metastringmap_included":{"name":"_metastringmap_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080},"last_updated":{"hash":"97c934862ffbe3373b78a51b11148258c6398307","count":228,"time":1646562080}},"value":""}},"enums":{},"typesets":{},"typedefs":{}}},"version":{"hash":"9a8e1d617f550f5e447381e72fef60640ca19721","count":241,"time":1650276452}}